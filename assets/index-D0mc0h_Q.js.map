{"version":3,"file":"index-D0mc0h_Q.js","sources":["../../src/constants.ts","../../src/sections.ts","../../src/ui.ts","../../src/levelManager.ts","../../src/state.ts","../../src/main.ts"],"sourcesContent":["export const SCREEN_EDGE_OFFSET = 48;\nexport const SPAWN_AIR_OFFSET = 64;\nexport const FALL_RESET_MULTIPLIER = 4;\n\nexport const TRAP_COLOR: [number, number, number] = [210, 60, 60];\nexport const START_COLOR: [number, number, number] = [255, 230, 0];\nexport const FINISH_COLOR: [number, number, number] = [120, 200, 255];\nexport const BOOST_COLOR: [number, number, number] = [255, 190, 80];\n\nexport const INITIAL_LIVES = 5;\n\nexport const SPEED = 160;\nexport const JUMP_FORCE = 420;\nexport const DEFAULT_BOOST_FORCE = 520;\n","export type TrapDef = {\n  pos: [number, number];\n  size: [number, number];\n  color?: [number, number, number];\n};\n\nexport type PlatformDef = {\n  pos: [number, number];\n  size: [number, number];\n  color?: [number, number, number];\n};\n\nexport type BoostPadDef = {\n  pos: [number, number];\n  size: [number, number];\n  force?: number;\n  color?: [number, number, number];\n};\n\nexport type Section = {\n  background: [number, number, number];\n  ground: {\n    y: number;\n    height: number;\n    color: [number, number, number];\n  };\n  platforms?: PlatformDef[];\n  traps?: TrapDef[];\n  boostPads?: BoostPadDef[];\n};\n\nexport const sections: Section[] = [\n  {\n    background: [12, 22, 70],\n    ground: { y: 230, height: 28, color: [110, 80, 60] },\n    platforms: [\n      { pos: [240, 185], size: [90, 16], color: [200, 160, 80] },\n      { pos: [420, 145], size: [110, 16], color: [205, 175, 90] },\n      { pos: [560, 115], size: [90, 16], color: [210, 180, 100] },\n    ],\n    traps: [\n      { pos: [240, 214], size: [60, 18] },\n      { pos: [380, 214], size: [60, 18] },\n    ],\n    boostPads: [\n      { pos: [140, 214], size: [40, 10], force: 520 },\n      { pos: [320, 214], size: [40, 10], force: 540 },\n    ],\n  },\n  {\n    background: [22, 48, 32],\n    ground: { y: 250, height: 38, color: [70, 130, 70] },\n    platforms: [\n      { pos: [220, 200], size: [110, 18], color: [90, 160, 90] },\n      { pos: [380, 165], size: [120, 18], color: [110, 180, 110] },\n      { pos: [540, 205], size: [80, 18], color: [120, 200, 120] },\n    ],\n    traps: [\n      { pos: [150, 234], size: [80, 20] },\n      { pos: [310, 234], size: [60, 20] },\n      { pos: [470, 234], size: [80, 20] },\n    ],\n    boostPads: [\n      { pos: [260, 234], size: [36, 10], force: 560 },\n      { pos: [400, 234], size: [36, 10], force: 600 },\n    ],\n  },\n  {\n    background: [40, 18, 55],\n    ground: { y: 220, height: 34, color: [140, 70, 120] },\n    platforms: [\n      { pos: [170, 180], size: [80, 16], color: [200, 110, 170] },\n      { pos: [300, 140], size: [100, 16], color: [210, 130, 180] },\n      { pos: [440, 120], size: [100, 16], color: [215, 140, 190] },\n      { pos: [580, 155], size: [80, 16], color: [220, 150, 200] },\n    ],\n    traps: [\n      { pos: [210, 204], size: [60, 18] },\n      { pos: [330, 204], size: [60, 18] },\n      { pos: [470, 204], size: [80, 18] },\n    ],\n    boostPads: [\n      { pos: [280, 204], size: [36, 10], force: 600 },\n      { pos: [560, 204], size: [36, 10], force: 640 },\n    ],\n  },\n  {\n    background: [60, 18, 18],\n    ground: { y: 200, height: 40, color: [160, 70, 50] },\n    platforms: [\n      { pos: [210, 165], size: [110, 18], color: [210, 120, 80] },\n      { pos: [340, 125], size: [100, 18], color: [220, 130, 90] },\n      { pos: [480, 115], size: [120, 18], color: [230, 150, 110] },\n      { pos: [600, 155], size: [80, 18], color: [240, 170, 130] },\n    ],\n    traps: [\n      { pos: [140, 184], size: [70, 22] },\n      { pos: [280, 184], size: [60, 22] },\n      { pos: [400, 184], size: [60, 22] },\n      { pos: [520, 184], size: [80, 22] },\n    ],\n    boostPads: [\n      { pos: [240, 184], size: [36, 10], force: 620 },\n      { pos: [360, 184], size: [36, 10], force: 660 },\n    ],\n  },\n  {\n    background: [18, 40, 70],\n    ground: { y: 215, height: 36, color: [90, 90, 120] },\n    platforms: [\n      { pos: [160, 180], size: [90, 16], color: [150, 170, 210] },\n      { pos: [280, 140], size: [100, 16], color: [160, 190, 220] },\n      { pos: [420, 110], size: [120, 16], color: [170, 200, 230] },\n      { pos: [560, 150], size: [100, 16], color: [180, 210, 240] },\n    ],\n    traps: [\n      { pos: [180, 198], size: [60, 18] },\n      { pos: [330, 198], size: [60, 18] },\n      { pos: [480, 198], size: [60, 18] },\n    ],\n    boostPads: [\n      { pos: [260, 198], size: [36, 10], force: 640 },\n      { pos: [410, 198], size: [36, 10], force: 680 },\n    ],\n  },\n  {\n    background: [72, 18, 50],\n    ground: { y: 205, height: 42, color: [180, 60, 100] },\n    platforms: [\n      { pos: [180, 170], size: [100, 18], color: [230, 120, 150] },\n      { pos: [320, 130], size: [110, 18], color: [240, 140, 170] },\n      { pos: [460, 130], size: [110, 18], color: [245, 150, 190] },\n      { pos: [600, 170], size: [100, 18], color: [250, 160, 210] },\n    ],\n    traps: [\n      { pos: [130, 190], size: [70, 20] },\n      { pos: [270, 190], size: [70, 20] },\n      { pos: [410, 190], size: [70, 20] },\n      { pos: [550, 190], size: [70, 20] },\n    ],\n    boostPads: [\n      { pos: [220, 190], size: [34, 10], force: 700 },\n      { pos: [360, 190], size: [34, 10], force: 720 },\n      { pos: [500, 190], size: [34, 10], force: 740 },\n    ],\n  },\n];\n","import type { GameObj, KAPLAYCtx } from \"kaplay\";\n\nimport type { GameState } from \"./state\";\n\nexport function ensureLivesUI(k: KAPLAYCtx, state: GameState) {\n  if (!state.livesText) {\n    state.livesText = k.add([\n      k.pos(16, 16),\n      k.anchor(\"topleft\"),\n      k.fixed(),\n      k.text(\"Lives: \" + state.lives, { size: 18 }),\n      k.color(255, 255, 255),\n    ]) as GameObj;\n  }\n\n  updateLivesUI(state);\n}\n\nexport function updateLivesUI(state: GameState) {\n  if (!state.livesText) {\n    return;\n  }\n  state.livesText.text = `Lives: ${Math.max(state.lives, 0)}`;\n}\n\nexport function ensureProgressUI(k: KAPLAYCtx, state: GameState, total: number) {\n  if (!state.progressText) {\n    state.progressText = k.add([\n      k.pos(k.width() - 16, 16),\n      k.anchor(\"topright\"),\n      k.fixed(),\n      k.text(\"\", { size: 18 }),\n      k.color(255, 255, 255),\n    ]) as GameObj;\n  }\n\n  updateProgressUI(state, total);\n}\n\nexport function updateProgressUI(state: GameState, total: number) {\n  if (!state.progressText) {\n    return;\n  }\n  state.progressText.text = `Stage ${state.currentSection + 1} / ${total}`;\n}\n","import type { GameObj, KAPLAYCtx } from \"kaplay\";\n\nimport {\n  BOOST_COLOR,\n  DEFAULT_BOOST_FORCE,\n  FINISH_COLOR,\n  INITIAL_LIVES,\n  SCREEN_EDGE_OFFSET,\n  SPAWN_AIR_OFFSET,\n  START_COLOR,\n  TRAP_COLOR,\n} from \"./constants\";\nimport { sections } from \"./sections\";\nimport type { GameState } from \"./state\";\nimport {\n  ensureLivesUI,\n  ensureProgressUI,\n  updateLivesUI,\n  updateProgressUI,\n} from \"./ui\";\n\nexport type LoadSectionOpts = {\n  entry?: \"left\" | \"right\";\n};\n\nexport function createLevelManager(\n  k: KAPLAYCtx,\n  pacman: GameObj,\n  state: GameState,\n) {\n  function loadSection(index: number, opts: LoadSectionOpts = {}) {\n    const clampedIndex = k.clamp(index, 0, sections.length - 1);\n    state.currentSection = clampedIndex;\n    state.hasFinished = false;\n    state.isRespawning = false;\n\n    state.sectionObjects.forEach((obj) => obj.destroy());\n    state.sectionObjects = [];\n\n    if (state.finishBanner) {\n      state.finishBanner.destroy();\n      state.finishBanner = null;\n    }\n\n    const section = sections[clampedIndex];\n    const [bgR, bgG, bgB] = section.background;\n    k.setBackground(k.rgb(bgR, bgG, bgB));\n\n    const ground = k.add([\n      k.pos(0, section.ground.y),\n      k.rect(k.width(), section.ground.height),\n      k.color(...section.ground.color),\n      k.area(),\n      k.body({ isStatic: true }),\n      k.anchor(\"topleft\"),\n    ]) as GameObj;\n    state.sectionObjects.push(ground);\n\n    section.platforms?.forEach((platform) => {\n      const platformColor = platform.color ?? [170, 170, 170];\n      const platformObj = k.add([\n        k.pos(...platform.pos),\n        k.rect(...platform.size),\n        k.color(...platformColor),\n        k.area(),\n        k.body({ isStatic: true }),\n        k.anchor(\"center\"),\n      ]) as GameObj;\n      state.sectionObjects.push(platformObj);\n    });\n\n    section.traps?.forEach((trap) => {\n      const trapColor = trap.color ?? TRAP_COLOR;\n      const trapObj = k.add([\n        \"trap\",\n        k.pos(...trap.pos),\n        k.rect(...trap.size),\n        k.color(...trapColor),\n        k.area(),\n        k.anchor(\"topleft\"),\n      ]) as GameObj;\n      state.sectionObjects.push(trapObj);\n    });\n\n    section.boostPads?.forEach((boost) => {\n      const boostObj = k.add([\n        \"boost\",\n        k.pos(...boost.pos),\n        k.rect(...boost.size),\n        k.color(...(boost.color ?? BOOST_COLOR)),\n        k.area(),\n        k.body({ isStatic: true }),\n        k.anchor(\"topleft\"),\n        {\n          boostForce: boost.force ?? DEFAULT_BOOST_FORCE,\n        },\n      ]) as GameObj<{ boostForce: number }>;\n      state.sectionObjects.push(boostObj);\n    });\n\n    if (clampedIndex === 0) {\n      const startPad = k.add([\n        k.pos(SCREEN_EDGE_OFFSET - 20, section.ground.y - 6),\n        k.rect(80, 12),\n        k.color(...START_COLOR),\n        k.anchor(\"center\"),\n      ]) as GameObj;\n      state.sectionObjects.push(startPad);\n\n      const startLabel = k.add([\n        k.pos(SCREEN_EDGE_OFFSET + 20, section.ground.y - 50),\n        k.anchor(\"center\"),\n        k.text(\"START\", { size: 20 }),\n        k.color(...START_COLOR),\n      ]) as GameObj;\n      state.sectionObjects.push(startLabel);\n    }\n\n    if (clampedIndex === sections.length - 1) {\n      const finishLine = k.add([\n        \"finish\",\n        k.pos(k.width() - SCREEN_EDGE_OFFSET, section.ground.y),\n        k.rect(16, section.ground.height + 160),\n        k.anchor(\"botleft\"),\n        k.color(...FINISH_COLOR),\n        k.area(),\n      ]) as GameObj;\n      state.sectionObjects.push(finishLine);\n\n      const finishLabel = k.add([\n        k.pos(k.width() - SCREEN_EDGE_OFFSET + 40, section.ground.y - 120),\n        k.anchor(\"center\"),\n        k.text(\"FINISH\", { size: 20 }),\n        k.color(...FINISH_COLOR),\n      ]) as GameObj;\n      state.sectionObjects.push(finishLabel);\n    }\n\n    ensureLivesUI(k, state);\n    ensureProgressUI(k, state, sections.length);\n\n    const spawnX = (() => {\n      if (opts.entry === \"left\") {\n        return SCREEN_EDGE_OFFSET;\n      }\n      if (opts.entry === \"right\") {\n        return k.width() - SCREEN_EDGE_OFFSET;\n      }\n      return k.clamp(\n        pacman.pos.x,\n        SCREEN_EDGE_OFFSET,\n        k.width() - SCREEN_EDGE_OFFSET,\n      );\n    })();\n\n    const spawnY = section.ground.y - SPAWN_AIR_OFFSET;\n\n    pacman.pos = k.vec2(spawnX, spawnY);\n    pacman.vel = k.vec2(0, 0);\n    pacman.gravityScale = 1;\n\n    if (opts.entry === \"left\") {\n      pacman.angle = 0;\n    } else if (opts.entry === \"right\") {\n      pacman.angle = 180;\n    }\n  }\n\n  function handleFinish() {\n    if (state.hasFinished) {\n      return;\n    }\n\n    state.hasFinished = true;\n    pacman.vel = k.vec2(0, 0);\n    pacman.pos.x = k.width() - SCREEN_EDGE_OFFSET - 24;\n    state.finishBanner = k.add([\n      k.pos(k.width() / 2, 80),\n      k.anchor(\"center\"),\n      k.text(\"Level Complete!\", { size: 28 }),\n      k.color(255, 255, 255),\n    ]) as GameObj;\n  }\n\n  function handleGameOver() {\n    state.hasFinished = true;\n    state.isRespawning = false;\n    pacman.vel = k.vec2(0, 0);\n    pacman.gravityScale = 0;\n    if (state.finishBanner) {\n      state.finishBanner.destroy();\n    }\n    state.finishBanner = k.add([\n      k.pos(k.width() / 2, k.height() / 2),\n      k.anchor(\"center\"),\n      k.text(\"Game Over\", { size: 32 }),\n      k.color(255, 80, 80),\n    ]) as GameObj;\n    updateLivesUI(state);\n    updateProgressUI(state, sections.length);\n  }\n\n  function respawnToStart() {\n    if (state.hasFinished || state.isRespawning) {\n      return;\n    }\n\n    state.isRespawning = true;\n    state.lives -= 1;\n    if (state.lives <= 0) {\n      state.lives = 0;\n      updateLivesUI(state);\n      handleGameOver();\n      return;\n    }\n\n    updateLivesUI(state);\n    updateProgressUI(state, sections.length);\n    loadSection(0, { entry: \"left\" });\n  }\n\n  function resetGame() {\n    state.lives = INITIAL_LIVES;\n    state.hasFinished = false;\n    state.isRespawning = false;\n    if (state.finishBanner) {\n      state.finishBanner.destroy();\n      state.finishBanner = null;\n    }\n    updateLivesUI(state);\n    updateProgressUI(state, sections.length);\n    loadSection(0, { entry: \"left\" });\n  }\n\n  return {\n    loadSection,\n    respawnToStart,\n    handleFinish,\n    handleGameOver,\n    resetGame,\n  };\n}\n","import type { GameObj } from \"kaplay\";\n\nimport { INITIAL_LIVES } from \"./constants\";\n\nexport type GameState = {\n  currentSection: number;\n  sectionObjects: GameObj[];\n  hasFinished: boolean;\n  finishBanner: GameObj | null;\n  lives: number;\n  livesText: GameObj | null;\n  isRespawning: boolean;\n  progressText: GameObj | null;\n};\n\nexport function createInitialState(): GameState {\n  return {\n    currentSection: 0,\n    sectionObjects: [],\n    hasFinished: false,\n    finishBanner: null,\n    lives: INITIAL_LIVES,\n    livesText: null,\n    isRespawning: false,\n    progressText: null,\n  };\n}\n","import kaplay, { type GameObj } from \"kaplay\";\n// import \"kaplay/global\"; // uncomment if you want to use without the k. prefix\n\nimport {\n  DEFAULT_BOOST_FORCE,\n  FALL_RESET_MULTIPLIER,\n  SCREEN_EDGE_OFFSET,\n  SPAWN_AIR_OFFSET,\n  SPEED,\n  JUMP_FORCE,\n} from \"./constants\";\nimport { createLevelManager } from \"./levelManager\";\nimport { sections } from \"./sections\";\nimport { createInitialState } from \"./state\";\n\nconst k = kaplay();\n\nk.loadRoot(\"./\");\nk.loadSprite(\"pacman\", \"sprites/pacman.png\", {\n  sliceX: 4,\n  anims: {\n    chomp: {\n      from: 0,\n      to: 3,\n      speed: 12,\n      loop: true,\n    },\n  },\n});\n\nk.setGravity(1200);\n\nconst pacman = k.add([\n  k.pos(120, 80),\n  k.sprite(\"pacman\", { anim: \"chomp\" }),\n  k.anchor(\"center\"),\n  k.area(),\n  k.body(),\n]) as GameObj;\n\nconst state = createInitialState();\nconst { loadSection, respawnToStart, handleFinish, resetGame } = createLevelManager(\n  k,\n  pacman,\n  state,\n);\n\nloadSection(state.currentSection);\n\npacman.onCollide(\"trap\", () => {\n  respawnToStart();\n});\n\npacman.onCollide(\"finish\", () => {\n  handleFinish();\n});\n\npacman.onCollide(\"boost\", (boostObj) => {\n  const force = (boostObj as GameObj<{ boostForce?: number }>).boostForce ?? DEFAULT_BOOST_FORCE;\n  pacman.jump(force);\n  pacman.angle = -20;\n});\n\nk.onUpdate(() => {\n  if (state.hasFinished) {\n    pacman.vel.x = 0;\n    return;\n  }\n\n  let moveX = 0;\n\n  if (k.isKeyDown(\"left\")) {\n    moveX -= 1;\n  }\n  if (k.isKeyDown(\"right\")) {\n    moveX += 1;\n  }\n\n  pacman.vel.x = moveX * SPEED;\n\n  if (moveX !== 0) {\n    pacman.angle = moveX < 0 ? 180 : 0;\n  }\n\n  if (pacman.pos.x > k.width() + SCREEN_EDGE_OFFSET) {\n    if (state.currentSection < sections.length - 1) {\n      loadSection(state.currentSection + 1, { entry: \"left\" });\n      return;\n    }\n    pacman.pos.x = k.width() - SCREEN_EDGE_OFFSET;\n  } else if (pacman.pos.x < -SCREEN_EDGE_OFFSET) {\n    if (state.currentSection > 0) {\n      loadSection(state.currentSection - 1, { entry: \"right\" });\n      return;\n    }\n    pacman.pos.x = SCREEN_EDGE_OFFSET;\n  }\n\n  if (pacman.pos.y > k.height() + SPAWN_AIR_OFFSET * FALL_RESET_MULTIPLIER) {\n    respawnToStart();\n  }\n});\n\nk.onKeyPress([\"up\", \"space\"], () => {\n  if (pacman.isGrounded()) {\n    pacman.jump(JUMP_FORCE);\n  }\n});\n\nk.onKeyPress(\"r\", () => {\n  resetGame();\n});\n"],"names":["SCREEN_EDGE_OFFSET","SPAWN_AIR_OFFSET","FALL_RESET_MULTIPLIER","TRAP_COLOR","START_COLOR","FINISH_COLOR","BOOST_COLOR","INITIAL_LIVES","SPEED","JUMP_FORCE","DEFAULT_BOOST_FORCE","sections","ensureLivesUI","k","state","updateLivesUI","ensureProgressUI","total","updateProgressUI","createLevelManager","pacman","loadSection","index","opts","clampedIndex","obj","section","bgR","bgG","bgB","ground","platform","platformColor","platformObj","trap","trapColor","trapObj","boost","boostObj","startPad","startLabel","finishLine","finishLabel","spawnX","spawnY","handleFinish","handleGameOver","respawnToStart","resetGame","createInitialState","kaplay","force","moveX"],"mappings":"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"}